{"ast":null,"code":"var _jsxFileName = \"/home/avinash/Desktop/Chatapp/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    {\n      /* Retrieving data which the user has entered */\n    }\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    {\n      /*When you click a button it refreshes the whole page we want to remove this default behaviour */\n    }\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n\n    console.log(message, messages);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/avinash/Desktop/Chatapp/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","off","on","sendMessage","event","preventDefault","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,OAAD,EAASC,UAAT,IAAuBb,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACc,QAAD,EAAUC,WAAV,IAAyBf,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAMgB,QAAQ,GAAG,gBAAjB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ;AAAC;AAAiD;AAClD,UAAM;AAACO,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAcR,WAAW,CAACe,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAApB;AAEAb,IAAAA,MAAM,GAAGF,EAAE,CAACa,QAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAAEX,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAoCU,KAAD,IAAW;AAC1C,UAAGA,KAAH,EAAS;AACLC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACJ,KAJD;AAMA,WAAO,MAAM;AACTf,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AAEAd,MAAAA,MAAM,CAACiB,GAAP;AACH,KAJD;AAMH,GArBQ,EAqBN,CAACN,QAAD,EAAUT,QAAQ,CAACW,MAAnB,CArBM,CAAT;AAuBAjB,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,MAAM,CAACkB,EAAP,CAAU,SAAV,EAAsBX,OAAD,IAAa;AAC9BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaF,OAAb,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIP,CAACE,QAAD,CAJO,CAAT;;AAMA,QAAMU,WAAW,GAAIC,KAAD,IAAW;AAC3B;AAAC;AAAkG;AACnGA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGd,OAAH,EAAW;AACPP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA0BP,OAA1B,EAAmC,MAAMC,UAAU,CAAC,EAAD,CAAnD;AACH;;AAEDc,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ,EAAoBE,QAApB;AACH,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAIJ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,OAAO,EAAIE,OAAlB;AAA4B,IAAA,UAAU,EAAEC,UAAxC;AAAoD,IAAA,WAAW,EAAGW,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAQH,CAvDD;;AAyDA,eAAelB,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\n\nlet socket;\n\nconst Chat = ({location}) => {\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [message,setMessage] = useState('');\n    const [messages,setMessages] = useState([]);\n    const ENDPOINT = 'localhost:5000';\n\n    useEffect(() => {\n        {/* Retrieving data which the user has entered */}\n        const {name,room} = queryString.parse(location.search);\n        \n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room}, (error) => {\n            if(error){\n                alert(error);\n            }\n        });\n\n        return () => {\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n\n    }, [ENDPOINT,location.search]);\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages,message]);\n        })\n    },[messages])\n\n    const sendMessage = (event) => {\n        {/*When you click a button it refreshes the whole page we want to remove this default behaviour */}\n        event.preventDefault();\n\n        if(message){\n            socket.emit('sendMessage',message, () => setMessage(''));\n        }\n\n        console.log(message,messages);\n    }\n\n    return (\n        <div className = \"outerContainer\">\n            <div className = \"container\">\n                <InfoBar room = {room}/>\n                <input message = {message}  setMessage={setMessage} sendMessage ={sendMessage}/>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}