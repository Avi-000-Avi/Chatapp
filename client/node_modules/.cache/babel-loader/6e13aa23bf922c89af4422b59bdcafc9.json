{"ast":null,"code":"var _jsxFileName = \"/home/avinash/Desktop/Chatapp/client/src/components/Chat/Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    {\n      /* Retrieving data which the user has entered */\n    }\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on('roomData', ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    {\n      /*When you click a button it refreshes the whole page we want to remove this default behaviour */\n    }\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/avinash/Desktop/Chatapp/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","on","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\n\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\n\nlet socket;\n\nconst Chat = ({location}) => {\n    \n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [users, setUsers] = useState('');\n    const [message,setMessage] = useState('');\n    const [messages,setMessages] = useState([]);\n    const ENDPOINT = 'localhost:5000';\n\n    useEffect(() => {\n        {/* Retrieving data which the user has entered */}\n        const {name,room} = queryString.parse(location.search);\n        \n        socket = io(ENDPOINT);\n\n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', { name, room}, (error) => {\n            if(error){\n                alert(error);\n            }\n        });\n    }, [ENDPOINT,location.search]);\n\n    useEffect(() => {\n        socket.on('message', (message) => {\n            setMessages([...messages,message]);\n        });\n\n        socket.on('roomData',({users})  => {\n            setUsers(users);\n        });\n    },[])\n\n    const sendMessage = (event) => {\n        {/*When you click a button it refreshes the whole page we want to remove this default behaviour */}\n        event.preventDefault();\n\n        if(message){\n            socket.emit('sendMessage',message, () => setMessage(''));\n        }    \n    }\n\n    console.log(message,messages);\n\n    return (\n        <div className = \"outerContainer\">\n            <div className = \"container\">\n                <InfoBar room = {room}/>\n                <Messages messages = {messages} name ={name}/>\n                <input message = {message}  setMessage={setMessage} sendMessage ={sendMessage}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}